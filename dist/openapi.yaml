openapi: 3.0.0
info:
  title: Recipes api
  description: API for recipes project
  version: 1.0.1
servers:
# local:
- url: "http://127.0.0.1:3000"
# remote:
# - url: "http://132.72.65.119"
  description: SwaggerHub API Auto Mocking hey
tags:
- name: users
  description: logged in users operations
- name: recipes
  description: Recipe path operations
- name: auth
  description: authorization operations
paths:
  /register:
    post:
      tags:
      - auth
      summary: open a new account in the system
      description: |
        register to the website
      requestBody:
        description: user properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
      responses:
        "200":
          description: New user succssesfuly created and added to the system
        "400":
          description: bad input parameter
  /logout:
    get:
      tags:
      - auth
      summary: Logs out current logged in user session
      responses:
        default:
          description: successful operation
  /login:
    post:
      tags:
      - auth
      summary: log in
      description: |
        login to the system
      operationId: login
      requestBody:
        description: user name and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        "200":
          description: User was found in the DB and authenitcated successfully. The session ID is returned in a cookie named `session`.  You should include this cookie in subsequent requests
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=87s97sdhgf279293f8w0e9
        "401":
          description: Authentication failed
  /users/favorites:
    get:
      tags:
      - users
      summary: get all favorite recipes of a user
      description: |
        get all favorite recipes of a user
      responses:
        "200":
          description: user's favorite recipes returned
        "401":
          description: user is not authorized
    post:
      tags:
      - users
      summary: add favorite recipes to a user
      description: |
        add favorite recipes to a user
      requestBody:
        description: recipe property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipe_id'
      responses:
        "201":
          description: recipe marked as favorite
        "401":
          description: user is not authorized
  /users/my_recipes:
    get:
      tags:
      - users
      summary: get all user recipes
      description: |
        get all user recipes
      responses:
        "200":
          description: all favorite recipes returned
          content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipe_preview'
        "401":
          description: user is not authorized
  /users/my_recipe/{recipeId}:
    get:
      tags:
      - users
      summary: get my recipe description by id
      description: get my recipe description by id
      parameters:
      - name: recipeId
        in: path
        description: recipe's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipe'
        "401":
          description: user is not authorized
        "404":
          description: recipe id not found

  /users/my_family_recipes:
    get:
      tags:
      - users
      summary: get all user family recipes
      description: |
        get all user family recipes
      responses:
        "200":
          description: all family recipes returned
          content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipe_preview'
        "401":
          description: user is not authorized

  /users/my_family_recipe/{recipeId}:
    get:
      tags:
      - users
      summary: get my family recipe description by id
      description: get my family description by id
      parameters:
      - name: recipeId
        in: path
        description: recipe's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipe'
        "401":
          description: user is not authorized
        "404":
          description: recipe id not found
  /users/last_watched:
    get:
      tags:
      - users
      summary: get last watched recipes of a user
      description: |
        get last watched recipes of a user
      responses:
        "200":
          description: user's last watched recipes returned
          content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipe_preview'
        "401":
          description: user is not authorized
  /users/add_recipe:
    post:
      tags:
      - users
      summary: Add new recipe to the database
      description: |
        Add new recipe to the website
      requestBody:
        description: Recipe data you want to add
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/add_recipe'
      responses:
        "201":
          description: user recipe added successfully
        "400":
          description: parameters are wrong
        "401":
          description: user is not authorized
  /recipes/random:
    get:
      tags:
      - recipes
      summary: get three random recipes
      re sponses:
        "200":
          description: three random recipes returned
          content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipe_preview'
        "404":
          description: no recipes found
  /details/{recipeId}:
    get:
      tags:
      - recipes
      summary: get recipe details and mark as watched
      description: |
        get recipe details and mark as watched
      parameters:
      - name: recipeId
        in: path
        description: recipe's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipe'
        "404":
          description: recipe id not found
  /recipes/search:
    get:
      tags:
      - recipes
      summary: search recepies
      description: |
        search recepies
      parameters:
      - name: title
        in: query
        description: The recipe name to search
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: brownies
      - name: number
        in: query
        description: The number of recipes to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: integer
          example: 5
      - name: cuisine
        in: query
        description: cuisine to filter
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Italian
      - name: diet
        in: query
        description: diet to filter
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Vegetarian
      - name: intolerances
        in: query
        description: intolerances to filter
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Gluten
      responses:
        "200":
          description: search results return successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/recipe_preview'
components:
  schemas:
    recipe_preview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
    recipe:
      required:
      - name image readyInMinutes vegan vegetarian glutenFree ingredients instructions servings
      type: object
      properties:
        name:
          type: string
          description: recipe name
          example: brownies
        image:
          type: string
          description: recipe image-url
          format: url
          example: https://img.mako.co.il/2015/04/05/meat_balls_shakshuka_afik_c.jpg
        readyInMinutes:
          type: number
          description: recipe procces time in minutes
          example: 2
        vegan:
          type: boolean
          description: if the recipe is vegan or not
        vegetarian:
          type: boolean
          description: if the recipe is vegetarian or not
        glutenFree:
          type: boolean
          description: if the recipe is gluten free
        ingredients:
          type: array
          description: name of the ingredients and their quantity
          items:
            type: string
        instructions:
          type: string
          description: recipe procces instructions
          items:
            type: string
        servings:
          type: number
          description: how many dishes comes from this recipe
    add_recipe:
      required:
      - name image readyInMinutes vegan vegetarian glutenFree ingredients instructions servings
      type: object
      properties:
        name:
          type: string
          description: recipe name
          example: brownies
        image:
          type: string
          description: recipe image
          format: binary
        readyInMinutes:
          type: number
          description: recipe procces time in minutes
          example: 2
        vegan:
          type: boolean
          description: if the recipe is vegan or not
        vegetarian:
          type: boolean
          description: if the recipe is vegetarian or not
        glutenFree:
          type: boolean
          description: if the recipe is gluten free
        ingredients:
          type: array
          description: name of the ingredients and their quantity
          items:
            type: string
        instructions:
          type: string
          description: recipe procces instructions
          items:
            type: string
        servings:
          type: number
          description: how many dishes comes from this recipe
    login:
      required:
      - user_name password
      type: object
      properties:
        user_name:
          type: string
          description: user name
          example: Israel123
        password:
          type: string
          example: qwerty12
      description: user name and password for login
    register:
      required:
      - user_name first_name last_name country password email
      type: object
      properties:
        user_name:
          type: string
          description: user name
          example: Israel123
        first_name:
          type: string
          description: first name
          example: Israel
        last_name:
          type: string
          description: last name
          example: Israeli
        country:
          type: string
          description: country name
          example: Italy
        password:
          type: string
          description: password
          example: qwerty12
        email:
          type: string
          description: email address
          example: israel@gmail.com
    recipe_id:
      required:
      - id
      type: object
      properties:
        id:
          type: number
          example: 2